const cron = require("node-cron");
const {
  getBookedTimes,
  removeBooking,
  getAllUserData,
  saveAllUserData,
} = require("./userData.js");

function cleanOldRecords(bot) {
  cron.schedule("*/15 * * * *", () => {
    const now = new Date();
    const bookedTimes = getBookedTimes();
    const users = getAllUserData();

    let removedCount = 0;

    for (const dateStr in bookedTimes) {
      const times = bookedTimes[dateStr];
      for (const timeStr in times) {
        const [year, month, day] = dateStr.split("-").map(Number);
        const [hour, minute] = timeStr.split(":").map(Number);
        const recordTime = new Date(year, month - 1, day, hour, minute);

        if (recordTime < now) {
          const chatId = times[timeStr].toString();
          const user = users[chatId];

          removeBooking(dateStr, timeStr);
          removedCount++;

          if (user) {
            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ª—è –∑–∞–ø–∏—Å—É
            if (
              user.selectedDate === dateStr &&
              user.selectedTime === timeStr
            ) {
              delete user.selectedDate;
              delete user.selectedTime;
              delete user.selectedService;
              delete user.selectedYear;
              delete user.selectedMonth;
              delete user.selectedDay;
            }

            // –í–∏–¥–∞–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è
            if (user.notifications) {
              user.notifications = user.notifications.filter(
                (n) => n.id !== `${dateStr} ${timeStr}`
              );

              // –Ø–∫—â–æ –ø—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–∏–π ‚Äî –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤–Ω—ñ—Å—Ç—é
              if (user.notifications.length === 0) {
                delete user.notifications;
              }
            }
          }
        }
      }
    }

    if (removedCount > 0) {
      saveAllUserData(users);
      console.log(`üßπ –í–∏–¥–∞–ª–µ–Ω–æ ${removedCount} –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤.`);
    } else {
      console.log("‚úÖ –ù–µ–º–∞—î –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è.");
    }
  });
}

module.exports = cleanOldRecords;
